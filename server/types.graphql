enum OrderState {
  CANCELLED
  CONFIRMED
  DELIVERED
  NEW
  PROBLEM
  READY
}

type Order @model {
  id: ID! @isUnique
  state: OrderState!
  customer: Customer! @relation(name: "CustomerOrders")
  dueDate: DateTime!
  history: [HistoryItem!]! @relation(name: "OrderHistoryItems")
  items: [OrderItem!]! @relation(name: "OrderItems")
  pickupLocation: PickupLocation! @relation(name: "OrderPickupLocation")
}

type Customer @model {
  id: ID! @isUnique
  fullName: String!
  phoneNumber: String
  details: String

  orders: [Order!]! @relation(name: "CustomerOrders")
}

type HistoryItem @model {
  id: ID! @isUnique
  timestamp: DateTime!
  newState: OrderState!
  createdBy: User! @relation(name: "UserHistoryItems")
  message: String

  order: Order! @relation(name: "OrderHistoryItems")
}

type User @model {
  id: ID! @isUnique
  email: String!
  firstName: String
  lastName: String
  role: String!
  locked: Boolean!

  historyItems: [HistoryItem!]! @relation(name: "UserHistoryItems")
}

type OrderItem @model {
  id: ID! @isUnique
  product: Product! @relation(name: "ProductOrderItems")
  quantity: Int!
  totalPrice: Int!
  comment: String

  order: Order! @relation(name: "OrderItems")
}

type Product @model {
  id: ID! @isUnique
  name: String!
  price: Int!

  orderItems: [OrderItem!]! @relation(name: "ProductOrderItems")
}

type PickupLocation @model {
  id: ID! @isUnique
  name: String!

  orders: [Order!]! @relation(name: "OrderPickupLocation")
}
